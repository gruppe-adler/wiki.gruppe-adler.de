import{_ as a,o as t,c as s,b as e,d as n,a as r,F as d,e as o,r as l}from"./app.f0092313.js";const c={},h=e("h1",{id:"erste-hilfe-missionsbau",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#erste-hilfe-missionsbau","aria-hidden":"true"},"#"),n(" \u{1F691} Erste Hilfe Missionsbau")],-1),u=e("p",null,"Die ganze \u{1F4A9} klappt nicht? Hier findest Du L\xF6sungen auf die h\xE4ufigsten Probleme, die beim Missionsbau auftreten \u2013 geordnet nach Typ.",-1),m={class:"custom-container tip"},g=e("p",{class:"custom-container-title"},"Disclaimer",-1),p={href:"https://github.com/gruppe-adler/co_template.vr/wiki",target:"_blank",rel:"noopener noreferrer"},f=o('<h2 id="grad-loadout" tabindex="-1"><a class="header-anchor" href="#grad-loadout" aria-hidden="true">#</a> GRAD-Loadout</h2><h3 id="greift-nicht" tabindex="-1"><a class="header-anchor" href="#greift-nicht" aria-hidden="true">#</a> <em>\u2026 greift nicht</em></h3><p>\u{1F4A1} <strong>Syntaxfehler beim Deklarieren? (Scriptfehler anschalten bzw. RPT pr\xFCfen):</strong></p><ul><li>Klammer zuviel/zu wenig</li><li>Semikolon vergessen</li><li>Klasse der Einheit muss mit Loadoutklasse \xFCbereinstimmen</li><li><code>B_</code> bzw. <code>O_</code> muss aus Loadoutklasse gek\xFCrzt werden, d.h. <code>Medic_F</code> statt <code>B_Medic_F</code></li></ul><p>\u{1F4A1} <strong>Weste/Rucksack \xFCberf\xFCllt?</strong><br> \u{1F4A1} <strong>Keine Vanilla NATO/CSAT Fraktion benutzt beim Setzen?</strong></p><h3 id="soll-nicht-greifen" tabindex="-1"><a class="header-anchor" href="#soll-nicht-greifen" aria-hidden="true">#</a> <em>\u2026 soll nicht greifen</em></h3><p>\u{1F4A1} <strong>in <code>USER/loadouts.hpp</code> darf keine Faction eingetragen sein</strong></p><h2 id="nackte-einheiten" tabindex="-1"><a class="header-anchor" href="#nackte-einheiten" aria-hidden="true">#</a> Nackte Einheiten</h2><div class="custom-container danger"><p class="custom-container-title">Kein GRAD-Loadout Bug</p><p>Nackte Einheiten entstehen seit einigen ARMA-Versionen beim Ownerwechsel von Zeus-Client auf Dedicated Server/Headless. Sollte mit Workaround im Template gefixt worden sein.</p></div><h4 id="ggf-uniformen-classnames-im-loadout-checken" tabindex="-1"><a class="header-anchor" href="#ggf-uniformen-classnames-im-loadout-checken" aria-hidden="true">#</a> \u{1F4A1} Ggf. Uniformen-Classnames im Loadout checken.</h4><p>Es gibt in Project Opfor Uniformen-Classname-L\xFCcken (bspw. <code>LOP_Bla_1</code>, <code>LOP_Bla_3</code> aber kein <code>LOP_Bla_2</code>)</p><h2 id="respawn" tabindex="-1"><a class="header-anchor" href="#respawn" aria-hidden="true">#</a> Respawn</h2><h3 id="greift-nicht-1" tabindex="-1"><a class="header-anchor" href="#greift-nicht-1" aria-hidden="true">#</a> <em>\u2026 greift nicht</em></h3><p>\u{1F4A1} Respawn Marker alle vorhanden? (m\xFCssen hei\xDFen: respawn_east, respawn_west, respawn_guerrila, respawn_civilian)</p><h3 id="soll-nicht-greifen-1" tabindex="-1"><a class="header-anchor" href="#soll-nicht-greifen-1" aria-hidden="true">#</a> <em>\u2026 soll nicht greifen</em></h3><p>\u{1F4A1} CBA Settings korrekt? ACE-medical: Prevent-Insta-Death sollte dort AN sein</p><h2 id="medicsettings" tabindex="-1"><a class="header-anchor" href="#medicsettings" aria-hidden="true">#</a> Medicsettings</h2><h3 id="einheit-kann-nicht-sterben-soll-aber" tabindex="-1"><a class="header-anchor" href="#einheit-kann-nicht-sterben-soll-aber" aria-hidden="true">#</a> <em>Einheit kann nicht sterben, soll aber</em></h3><ul><li>Prevent-Insta-Death ausmachen</li><li>Revive ausmachen (!)</li></ul><p>\u{1F4A1} Einstellungen siehe CBA Settings</p><h2 id="cba-settings" tabindex="-1"><a class="header-anchor" href="#cba-settings" aria-hidden="true">#</a> CBA Settings</h2><div class="custom-container warning"><p class="custom-container-title">Wenn die CBA-Settings nicht greifen, ist etwas grunds\xE4tzlich schief</p><p>Denn diese sind im CO_Template enthalten und brauchen nicht angefasst werden.</p></div><p>\u{1F4A1} CO_Template bringt alle n\xF6tigen Settings mit Advanced Medical<br> \u{1F4A1} <strong>Sofern die Mission nicht im Template erstellt wurde</strong> \u2013 manuell im CO_Template speichern und in der neuen Missionsdatei laden:</p><ol><li>CO_Template laden, Addon Settings \xF6ffnen, Speichern</li><li>Zielmission laden, Addon Settings \xF6ffnen, eben gespeichertes laden</li><li>Kurz pr\xFCfen ob Advanced Medical eingestellt ist (Stichprobe)</li></ol><h2 id="ganz-generell" tabindex="-1"><a class="header-anchor" href="#ganz-generell" aria-hidden="true">#</a> Ganz generell</h2><div class="custom-container warning"><p class="custom-container-title">Testen bleibt das A und O</p><p>Wer seine Mission nicht auf dem Dedicated Server (!) testet, der hat auch keine Chance Probleme rechtzeitig zu entdecken.</p></div>',26);function b(_,k){const i=l("OutboundLink");return t(),s(d,null,[h,u,e("div",m,[g,e("p",null,[n("Es empfiehlt sich, die Anleitung von McDiod einmal komplett gelesen und einmal komplett verstanden zu haben. So eine gute "),e("a",p,[n("Dokumentation"),r(i)]),n(" findet man sonst selten.")])]),f],64)}var w=a(c,[["render",b]]);export{w as default};
