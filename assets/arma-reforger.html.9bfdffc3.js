import{_ as o,o as e,c,b as n,a as t,w as p,F as u,d as s,e as l,r as i}from"./app.f0092313.js";const r={},k=n("h1",{id:"\u{1FA96}-arma-reforger",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u{1FA96}-arma-reforger","aria-hidden":"true"},"#"),s(" \u{1FA96} Arma Reforger")],-1),d={class:"table-of-contents"},h=l(`<h2 id="hints" tabindex="-1"><a class="header-anchor" href="#hints" aria-hidden="true">#</a> Hints</h2><div class="language-c ext-c"><pre class="language-c"><code>string title <span class="token operator">=</span> <span class="token string">&quot;Gruppe Adler&quot;</span><span class="token punctuation">;</span> <span class="token comment">// default = string.Empty</span>
string message <span class="token operator">=</span> <span class="token string">&quot;rulez&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> duration <span class="token operator">=</span> <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token comment">// in seconds</span>
bool isSilent <span class="token operator">=</span> false<span class="token punctuation">;</span> <span class="token comment">// default = false</span>

SCR_HintManagerComponent<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ShowCustomHint</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> title<span class="token punctuation">,</span> duration<span class="token punctuation">,</span> isSilent<span class="token punctuation">)</span><span class="token punctuation">;</span>

SCR_HintManagerComponent<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ShowCustomHint</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><img width="222" alt="Screenshot 2023-10-14 111219" src="https://github.com/gruppe-adler/wiki.gruppe-adler.de/assets/50139270/85497374-bf69-4c84-a11a-cfe541990f23"><h2 id="console-output" tabindex="-1"><a class="header-anchor" href="#console-output" aria-hidden="true">#</a> Console Output</h2><h3 id="print" tabindex="-1"><a class="header-anchor" href="#print" aria-hidden="true">#</a> Print()</h3><div class="language-c ext-c"><pre class="language-c"><code><span class="token comment">// LogLevel defaults to LogLevel.NORMAL</span>

<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;spam message&quot;</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>SPAM<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;verbose message&quot;</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>VERBOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;debug message&quot;</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;normal message&quot;</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;warning message&quot;</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>WARNING<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;error message&quot;</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>ERROR<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;fatal message&quot;</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>FATAL<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Perhaps SPAM, VERBOSE and DEBUG only show up if special states are active, like Debug Mode</span>
</code></pre></div><img width="362" alt="Screenshot 2023-10-14 112118" src="https://github.com/gruppe-adler/wiki.gruppe-adler.de/assets/50139270/ea0a9d79-84fc-48fd-befb-398ac95c93cc"><h3 id="printformat" tabindex="-1"><a class="header-anchor" href="#printformat" aria-hidden="true">#</a> PrintFormat()</h3><div class="language-c ext-c"><pre class="language-c"><code>string s1 <span class="token operator">=</span> <span class="token string">&quot;The&quot;</span><span class="token punctuation">;</span>
string s2 <span class="token operator">=</span> <span class="token string">&quot;quick&quot;</span><span class="token punctuation">;</span>
string s3 <span class="token operator">=</span> <span class="token string">&quot;brown&quot;</span><span class="token punctuation">;</span>
string s4 <span class="token operator">=</span> <span class="token string">&quot;fox&quot;</span><span class="token punctuation">;</span>
string s5 <span class="token operator">=</span> <span class="token string">&quot;jumps&quot;</span><span class="token punctuation">;</span>
string s6 <span class="token operator">=</span> <span class="token string">&quot;over&quot;</span><span class="token punctuation">;</span>
string s7 <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
string s8 <span class="token operator">=</span> <span class="token string">&quot;lazy&quot;</span><span class="token punctuation">;</span>
string s9 <span class="token operator">=</span> <span class="token string">&quot;dog&quot;</span><span class="token punctuation">;</span>

<span class="token function">PrintFormat</span><span class="token punctuation">(</span><span class="token string">&quot;%1 %2 %3 %4 %5 %6 %7 %8 %9.&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> s3<span class="token punctuation">,</span> s4<span class="token punctuation">,</span> s5<span class="token punctuation">,</span> s6<span class="token punctuation">,</span> s7<span class="token punctuation">,</span> s8<span class="token punctuation">,</span> s9<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// PrintFormat() does not support LogLevel but you could use this instead:</span>
<span class="token function">Print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;%1 %2 %3 %4 %5 %6 %7 %8 %9.&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> s3<span class="token punctuation">,</span> s4<span class="token punctuation">,</span> s5<span class="token punctuation">,</span> s6<span class="token punctuation">,</span> s7<span class="token punctuation">,</span> s8<span class="token punctuation">,</span> s9<span class="token punctuation">)</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// I think I read somewhere that the parameter count of functions is generally limited to 9 or 10</span>
</code></pre></div><img width="376" alt="Screenshot 2023-10-14 112710" src="https://github.com/gruppe-adler/wiki.gruppe-adler.de/assets/50139270/86539fb9-f196-4d3a-81af-4b0a387ac7f4"><h2 id="check-locality" tabindex="-1"><a class="header-anchor" href="#check-locality" aria-hidden="true">#</a> Check Locality ...</h2><h3 id="for-an-entity-that-has-a-rplcomponent" tabindex="-1"><a class="header-anchor" href="#for-an-entity-that-has-a-rplcomponent" aria-hidden="true">#</a> ... for an Entity that has a RplComponent</h3><div class="language-c ext-c"><pre class="language-c"><code>IEntity entity <span class="token operator">=</span> <span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FindEntityByName</span><span class="token punctuation">(</span><span class="token string">&quot;MyEntity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

RplComponent rplComp <span class="token operator">=</span> RplComponent<span class="token punctuation">.</span><span class="token function">Cast</span><span class="token punctuation">(</span>entity<span class="token punctuation">.</span><span class="token function">FindComponent</span><span class="token punctuation">(</span>RplComponent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>rplComp<span class="token punctuation">.</span><span class="token function">Role</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> RplRole<span class="token punctuation">.</span>Authority<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;This computer hat the role &#39;Authority&#39; for this entity.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>rplComp<span class="token punctuation">.</span><span class="token function">Role</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> RplRole<span class="token punctuation">.</span>Proxy<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;This computer hat the role &#39;Proxy&#39; for this entity.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">PrintFormat</span><span class="token punctuation">(</span><span class="token string">&quot;Master: %1&quot;</span><span class="token punctuation">,</span> rplComp<span class="token punctuation">.</span><span class="token function">IsMaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PrintFormat</span><span class="token punctuation">(</span><span class="token string">&quot;Owner: %1&quot;</span><span class="token punctuation">,</span> rplComp<span class="token punctuation">.</span><span class="token function">IsOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PrintFormat</span><span class="token punctuation">(</span><span class="token string">&quot;Proxy: %1&quot;</span><span class="token punctuation">,</span> rplComp<span class="token punctuation">.</span><span class="token function">IsProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><img width="435" alt="Screenshot 2023-10-14 121225" src="https://github.com/gruppe-adler/wiki.gruppe-adler.de/assets/50139270/2a803322-05b7-4499-aca6-66f4b332c74d"><h3 id="more-in-general" tabindex="-1"><a class="header-anchor" href="#more-in-general" aria-hidden="true">#</a> ... more in general</h3><div class="language-c ext-c"><pre class="language-c"><code><span class="token function">PrintFormat</span><span class="token punctuation">(</span><span class="token string">&quot;Server: %1&quot;</span><span class="token punctuation">,</span> Replication<span class="token punctuation">.</span><span class="token function">IsServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">PrintFormat</span><span class="token punctuation">(</span><span class="token string">&quot;Client: %1&quot;</span><span class="token punctuation">,</span> Replication<span class="token punctuation">.</span><span class="token function">IsClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><img width="347" alt="Screenshot 2023-10-14 142207" src="https://github.com/gruppe-adler/wiki.gruppe-adler.de/assets/50139270/5639a767-2900-46e2-a984-ec0a6093c943"><h2 id="find-entities" tabindex="-1"><a class="header-anchor" href="#find-entities" aria-hidden="true">#</a> Find entities</h2><div class="language-c ext-c"><pre class="language-c"><code><span class="token comment">// Give your entity a name in in the object properties (It&#39;s something like a variable name)</span>

IEntity entity <span class="token operator">=</span> <span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FindEntityByName</span><span class="token punctuation">(</span><span class="token string">&quot;MyEntity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><img width="343" alt="Screenshot 2023-10-14 120009" src="https://github.com/gruppe-adler/wiki.gruppe-adler.de/assets/50139270/8eebe4a3-df52-4b6b-b742-d31493a02e46"><h2 id="spectator" tabindex="-1"><a class="header-anchor" href="#spectator" aria-hidden="true">#</a> Spectator</h2><p>See GRAD Spectator for implementation details: https://github.com/gruppe-adler/GRAD-Spectator</p><div class="language-c ext-c"><pre class="language-c"><code><span class="token comment">// Execute locally</span>

<span class="token comment">// Get players entity position</span>
vector pos <span class="token operator">=</span> <span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetPlayerController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetControlledEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Change position to be above and behind the entity</span>
pos<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> pos<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">;</span>
pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
		
<span class="token comment">// Enable specator by spawning the spectator entity at the given position</span>
EntitySpawnParams params <span class="token operator">=</span> new <span class="token function">EntitySpawnParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
params<span class="token punctuation">.</span>Transform<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> pos<span class="token punctuation">;</span>
Resource r <span class="token operator">=</span> Resource<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">&quot;{E1FF38EC8894C5F3}Prefabs/Editor/Camera/ManualCameraSpectate.et&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
IEntity spectator <span class="token operator">=</span> <span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SpawnEntityPrefab</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Disable specator by deleting spectator entity</span>
SCR_EntityHelper<span class="token punctuation">.</span><span class="token function">DeleteEntityAndChildren</span><span class="token punctuation">(</span>spectator<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="teleport" tabindex="-1"><a class="header-anchor" href="#teleport" aria-hidden="true">#</a> Teleport</h2><div class="language-c ext-c"><pre class="language-c"><code>IEntity target <span class="token operator">=</span> <span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FindEntityByName</span><span class="token punctuation">(</span><span class="token string">&quot;SpawnPoint&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// This will not work very well in MP when executed on server</span>
<span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetPlayerController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetControlledEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetOrigin</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">GetOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// execute locally on players machine; works in MP</span>
SCR_Global<span class="token punctuation">.</span><span class="token function">TeleportLocalPlayer</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">GetOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> SCR_EPlayerTeleportedReason<span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="scheduled-execution" tabindex="-1"><a class="header-anchor" href="#scheduled-execution" aria-hidden="true">#</a> Scheduled execution</h2><div class="language-c ext-c"><pre class="language-c"><code><span class="token keyword">int</span> delay <span class="token operator">=</span> <span class="token number">250</span><span class="token punctuation">;</span> <span class="token comment">// milliseconds</span>
bool repeat <span class="token operator">=</span> false<span class="token punctuation">;</span>
string parameter1 <span class="token operator">=</span> <span class="token string">&quot;Hello &quot;</span><span class="token punctuation">;</span>
string parameter2 <span class="token operator">=</span> <span class="token string">&quot;World!&quot;</span><span class="token punctuation">;</span>

<span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetCallqueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">CallLater</span><span class="token punctuation">(</span>FunctionWithoutBraces<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> repeat<span class="token punctuation">,</span> parameter1<span class="token punctuation">,</span> parameter2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="check-for-workbench-mode" tabindex="-1"><a class="header-anchor" href="#check-for-workbench-mode" aria-hidden="true">#</a> Check for Workbench Mode</h2><div class="language-c ext-c"><pre class="language-c"><code>SCR_Global<span class="token punctuation">.</span><span class="token function">IsEditMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// returns true if currentlich in Workbench Mode and not in-game</span>
</code></pre></div><h2 id="check-if-game-master-is-controlling-an-entity-possessing" tabindex="-1"><a class="header-anchor" href="#check-if-game-master-is-controlling-an-entity-possessing" aria-hidden="true">#</a> Check if Game Master is controlling an entity (possessing)</h2><div class="language-c ext-c"><pre class="language-c"><code><span class="token comment">// This is a given entity; This is dummy code</span>
IEntity entity<span class="token punctuation">;</span>

<span class="token keyword">int</span> playerId <span class="token operator">=</span> <span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetPlayerManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetPlayerIdFromControlledEntity</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
SCR_PlayerController playerController <span class="token operator">=</span>  SCR_PlayerController<span class="token punctuation">.</span><span class="token function">Cast</span><span class="token punctuation">(</span><span class="token function">GetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetPlayerManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetPlayerController</span><span class="token punctuation">(</span>playerId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>playerController<span class="token punctuation">)</span>
	<span class="token keyword">return</span><span class="token punctuation">;</span>

<span class="token comment">// Possessing means that the game master is controlling an AI character</span>
<span class="token comment">// The game master also has (optionally) it&#39;s own character; If he controls his own unit, it&#39;s not possessing</span>
<span class="token function">Print</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;isPossessing: %1&quot;</span><span class="token punctuation">,</span> playerController<span class="token punctuation">.</span><span class="token function">IsPossessing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> LogLevel<span class="token punctuation">.</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,31);function g(m,f){const a=i("RouterLink");return e(),c(u,null,[k,n("nav",d,[n("ul",null,[n("li",null,[t(a,{to:"#hints"},{default:p(()=>[s("Hints")]),_:1})]),n("li",null,[t(a,{to:"#console-output"},{default:p(()=>[s("Console Output")]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#print"},{default:p(()=>[s("Print()")]),_:1})]),n("li",null,[t(a,{to:"#printformat"},{default:p(()=>[s("PrintFormat()")]),_:1})])])]),n("li",null,[t(a,{to:"#check-locality"},{default:p(()=>[s("Check Locality ...")]),_:1}),n("ul",null,[n("li",null,[t(a,{to:"#for-an-entity-that-has-a-rplcomponent"},{default:p(()=>[s("... for an Entity that has a RplComponent")]),_:1})]),n("li",null,[t(a,{to:"#more-in-general"},{default:p(()=>[s("... more in general")]),_:1})])])]),n("li",null,[t(a,{to:"#find-entities"},{default:p(()=>[s("Find entities")]),_:1})]),n("li",null,[t(a,{to:"#spectator"},{default:p(()=>[s("Spectator")]),_:1})]),n("li",null,[t(a,{to:"#teleport"},{default:p(()=>[s("Teleport")]),_:1})]),n("li",null,[t(a,{to:"#scheduled-execution"},{default:p(()=>[s("Scheduled execution")]),_:1})]),n("li",null,[t(a,{to:"#check-for-workbench-mode"},{default:p(()=>[s("Check for Workbench Mode")]),_:1})]),n("li",null,[t(a,{to:"#check-if-game-master-is-controlling-an-entity-possessing"},{default:p(()=>[s("Check if Game Master is controlling an entity (possessing)")]),_:1})])])]),h],64)}var q=o(r,[["render",g]]);export{q as default};
